name: ${COMPOSE_NAME}
services:
  app:
    build: ./backend
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
    env_file: .env
    container_name: ${CONTAINER_NAME}
    volumes:
      - $HOST_DATASET_PATH:/app/dataset:ro
    ports: 
      - 8080:8080
  
  postgres:
    image: postgres:17
    container_name: postgres
    restart: unless-stopped
    env_file: .env
    environment:
      - POSTGRES_USER=${PG_U}
      - POSTGRES_PASSWORD=${PG_P}
      - POSTGRES_DB=${PG_DB}
      - POSTGRES_HOST_AUTH_METHOD=${PG_HAM}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_U} -d ${PG_DB}"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s

  minio:
    container_name: minio
    image: bitnami/minio:2025.7.23
    volumes: 
      - minio_data:/data
    ports:
      - 9000:9000
    restart: unless-stopped
    env_file: .env
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_USE_SSL: ${MINIO_USE_SSL}
      MINIO_DEFAULT_BUCKETS: ${MINIO_BUCKET_NAME}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://${MINIO_ENDPOINT:-localhost:9000}/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

volumes:
  postgres_data:
  minio_data: